@model BloodBankManagementSystem.Models.Donor

@{
    ViewBag.Title = "Registration";
   
}



<div class="container">


    <div class=" row">


        <div class="col-md-15 col-md-offset-2 ">


            @*< style="border:1px solid red;">*@


            @using (Html.BeginForm())
            {

                <h2 class="jumbotron text-center"> Donor Registration Form</h2>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                <div class="form-group">
                    @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.genderid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.genderid, ViewBag.GenderList as SelectList, "--Gender--", new { @class = "form-control" })
                    </div>
                </div>


                <script src="~/Scripts/jquery-3.3.1.min.js"></script>



                <script>


                    $(document).ready(function () {
                        $("#genderid").change(function () {
                            $.get("/Home/GetGenderList", { genderid: $("#genderid").val() }, function (data) {


                            })
                        });
                    });
                </script>





                <div class="form-group">
                    @Html.LabelFor(model => model.bloodgroupid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.bloodgroupid, ViewBag.BloodGroupList as SelectList, "--Blood Group--", new { @class = "form-control" })
                    </div>
                </div>


                <script src="~/Scripts/jquery-3.3.1.min.js"></script>

                <script>


                    $(document).ready(function () {
                        $("#bloodgroupid").change(function () {
                            $.get("/Home/GetStateList", { bloodgroupid: $("#bloodgroupid").val() }, function (data) {


                            })
                        });
                    });
                </script>

                <div class="form-group">
                    @Html.LabelFor(model => model.panno, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.panno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.panno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phoneno, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phoneno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phoneno, "", new { @class = "text-danger" })
                    </div>
                </div>

               

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>


                    <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </div>
                </div>






                <div class="form-group">
                    @Html.LabelFor(model => model.countryid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (ViewBag.CountryList != null)
                        {
                            @Html.DropDownListFor(model => model.countryid, ViewBag.CountryList as SelectList, "--Select Country--", new { @class = "form-control", });
                        }
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.stateid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.stateid, new SelectList(" "), "--Select State--", new { @class = "form-control", })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cityid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.cityid, new SelectList(" "), "--Select City--", new { @class = "form-control", })

                    </div>
                </div>


                <br />
                <br />



                <div class="row text-center">


                    <div class="form-grop col-sm-6 col-sm-offset-1">

                        <input type="submit" value="Submit" class="btn btn-success btn-block" />

                    </div>

                </div>



            }


        </div>
    </div>
</div>





<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.js" integrity="sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E=" crossorigin="anonymous"></script>
<script>
    $(document).ready(function () {
        $("#countryid").change(function () {
            $.get("/Home/GetStateList", {
                countryid: $("#countryid").val
                    ()
            }, function (data) {
                $("#stateid").empty();
                $.each(data, function (Index, row) {
                    $("#stateid").append("<option value='" + row.stateid + "'>" + row.statename + "</option>")
                });
            });
        });
        $("#stateid").change(function () {
            $.get("/Home/GetCityList", { stateid: $("#stateid").val() },
                function (data) {
                    $("#cityid").empty()
                    $.each(data, function (Index, row) {
                        $("#cityid").append("<option value='" + row.cityid + "'>" + row.cityname + "</option>")
                    });
                });
        });
    });
</script>

    